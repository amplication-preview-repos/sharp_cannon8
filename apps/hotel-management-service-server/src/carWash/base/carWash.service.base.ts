/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CarWash as PrismaCarWash } from "@prisma/client";

export class CarWashServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CarWashCountArgs, "select">): Promise<number> {
    return this.prisma.carWash.count(args);
  }

  async carWashes<T extends Prisma.CarWashFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarWashFindManyArgs>
  ): Promise<PrismaCarWash[]> {
    return this.prisma.carWash.findMany<Prisma.CarWashFindManyArgs>(args);
  }
  async carWash<T extends Prisma.CarWashFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarWashFindUniqueArgs>
  ): Promise<PrismaCarWash | null> {
    return this.prisma.carWash.findUnique(args);
  }
  async createCarWash<T extends Prisma.CarWashCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarWashCreateArgs>
  ): Promise<PrismaCarWash> {
    return this.prisma.carWash.create<T>(args);
  }
  async updateCarWash<T extends Prisma.CarWashUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarWashUpdateArgs>
  ): Promise<PrismaCarWash> {
    return this.prisma.carWash.update<T>(args);
  }
  async deleteCarWash<T extends Prisma.CarWashDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CarWashDeleteArgs>
  ): Promise<PrismaCarWash> {
    return this.prisma.carWash.delete(args);
  }
}
